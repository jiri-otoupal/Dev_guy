package com.jiri.entities.portals;

import com.jiri.entities.items.Portal;
import com.jiri.level.Level;
import com.jiri.level.Jungle;
import com.jiri.level.Streamer;

public class PortalJungle extends Portal {

    public PortalJungle(Level currentLevel, boolean enableGravity, String name) {
        super(currentLevel, false, name);
        this.loops = true;
        this.animationState = new char[][][][]{{
                {
                        {' ', ' ', '_', '_', '_', '_', ' ', ' '},
                        {'○', '/', ' ', ' ', ' ', ' ', '\\', ' '},
                        {' ', '(', ' ', ' ', ' ', ' ', ')', ' '},
                        {' ', '|', ' ', ' ', ' ', ' ', '|', ' '},
                        {' ', '|', ' ', ' ', ' ', ' ', '|', ' '},
                        {' ', '(', ' ', ' ', ' ', ' ', ')', ' '},
                        {' ', '\\', ' ', ' ', ' ', ' ', '/', ' '},
                        {' ', ' ', '¯', '¯', '¯', '¯', ' ', ' '}
                },
                {
                        {' ', ' ', '_', '_', '_', '_', ' ', ' '},
                        {'○', '/', ' ', ' ', ' ', ' ', '\\', ' '},
                        {' ', '(', ' ', ' ', ' ', ' ', ')', ' '},
                        {' ', '|', ' ', '.', ' ', ' ', '|', ' '},
                        {' ', '|', ' ', ' ', ' ', ' ', '|', ' '},
                        {' ', '(', ' ', ' ', ' ', ' ', ')', ' '},
                        {' ', '\\', ' ', ' ', ' ', ' ', '/', ' '},
                        {' ', ' ', '¯', '¯', '¯', '¯', ' ', ' '}
                },
                {
                        {' ', ' ', '_', '_', '_', '_', ' ', ' '},
                        {' ', '/', ' ', ' ', ' ', ' ', '\\', ' '},
                        {' ', '(', ' ', ' ', ' ', ' ', ')', ' '},
                        {' ', '|', ' ', '.', '.', ' ', '|', ' '},
                        {' ', '|', ' ', ' ', ' ', ' ', '|', ' '},
                        {' ', '(', ' ', ' ', ' ', ' ', ')', ' '},
                        {' ', '\\', ' ', ' ', ' ', ' ', '/', ' '},
                        {' ', ' ', '¯', '¯', '¯', '¯', '○', ' '}
                },
                {
                        {' ', ' ', '_', '_', '_', '_', ' ', ' '},
                        {' ', '/', ' ', ' ', ' ', ' ', '\\', ' '},
                        {' ', '(', ' ', ' ', ' ', ' ', ')', ' '},
                        {' ', '|', ' ', '.', '.', ' ', '|', ' '},
                        {' ', '|', ' ', ' ', '.', ' ', '|', ' '},
                        {' ', '(', ' ', ' ', ' ', ' ', ')', ' '},
                        {' ', '\\', ' ', ' ', ' ', ' ', '/', ' '},
                        {' ', ' ', '¯', '¯', '¯', '¯', '○', ' '}
                },
                {
                        {'○', ' ', '_', '_', '_', '_', ' ', ' '},
                        {' ', '/', ' ', ' ', ' ', ' ', '\\', ' '},
                        {' ', '(', ' ', ' ', ' ', ' ', ')', ' '},
                        {' ', '|', ' ', '.', '.', ' ', '|', ' '},
                        {' ', '|', ' ', ' ', '.', ' ', '|', ' '},
                        {' ', '(', ' ', ' ', ' ', ' ', ')', ' '},
                        {' ', '\\', ' ', ' ', ' ', ' ', '/', ' '},
                        {' ', ' ', '¯', '¯', '¯', '¯', ' ', '○'}
                },
                {
                        {'○', ' ', '_', '_', '_', '_', ' ', ' '},
                        {' ', '/', ' ', ' ', ' ', ' ', '\\', ' '},
                        {' ', '(', ' ', ' ', ' ', ' ', ')', ' '},
                        {' ', '|', ' ', '.', '.', ' ', '|', ' '},
                        {' ', '|', ' ', ' ', '.', ' ', '|', ' '},
                        {'○', '(', ' ', ' ', ' ', ' ', ')', ' '},
                        {' ', '\\', ' ', ' ', ' ', ' ', '/', ' '},
                        {' ', ' ', '¯', '¯', '¯', '¯', ' ', '○'}
                },
                {
                        {' ', ' ', '_', '_', '_', '_', ' ', ' '},
                        {' ', '/', ' ', ' ', ' ', ' ', '\\', ' '},
                        {' ', '(', ' ', ' ', ' ', ' ', ')', '○'},
                        {' ', '|', ' ', '.', '.', ' ', '|', ' '},
                        {' ', '|', ' ', ' ', '.', ' ', '|', ' '},
                        {' ', '(', ' ', ' ', ' ', ' ', ')', ' '},
                        {' ', '\\', ' ', ' ', ' ', ' ', '/', ' '},
                        {' ', ' ', '¯', '¯', '¯', '¯', '○', ' '}
                },
                {
                        {' ', ' ', '_', '_', '_', '_', ' ', ' '},
                        {' ', '/', ' ', ' ', ' ', ' ', '\\', ' '},
                        {'○', '(', ' ', ' ', ' ', ' ', ')', ' '},
                        {' ', '|', ' ', '.', '.', ' ', '|', '○'},
                        {' ', '|', ' ', ' ', '.', ' ', '|', ' '},
                        {' ', '(', ' ', ' ', ' ', ' ', ')', ' '},
                        {' ', '\\', ' ', ' ', ' ', ' ', '/', ' '},
                        {' ', ' ', '¯', '¯', '¯', '¯', '○', ' '}
                },
                {
                        {'○', ' ', '_', '_', '_', '_', ' ', ' '},
                        {' ', '/', ' ', ' ', ' ', ' ', '\\', ' '},
                        {' ', '(', ' ', ' ', ' ', ' ', ')', ' '},
                        {' ', '|', ' ', '.', '.', ' ', '|', ' '},
                        {' ', '|', ' ', '.', '.', ' ', '|', ' '},
                        {' ', '(', ' ', ' ', ' ', ' ', ')', ' '},
                        {' ', '\\', ' ', ' ', ' ', ' ', '/', ' '},
                        {' ', ' ', '¯', '¯', '¯', '¯', ' ', ' '}
                },
                {
                        {'○', ' ', '_', '_', '_', '_', ' ', '○'},
                        {' ', '/', ' ', ' ', ' ', ' ', '\\', ' '},
                        {' ', '(', ' ', ' ', ' ', ' ', ')', ' '},
                        {' ', '|', ' ', '.', '.', ' ', '|', ' '},
                        {' ', '|', ' ', '.', '.', ' ', '|', ' '},
                        {' ', '(', ' ', ' ', ' ', ' ', ')', ' '},
                        {' ', '\\', ' ', ' ', ' ', ' ', '/', ' '},
                        {' ', ' ', '¯', '¯', '¯', '¯', ' ', ' '}
                },
                {
                        {'○', ' ', '_', '_', '_', '_', ' ', ' '},
                        {' ', '/', ' ', ' ', ' ', ' ', '\\', ' '},
                        {' ', '(', ' ', ' ', ' ', ' ', ')', ' '},
                        {' ', '|', ' ', '.', '.', ' ', '|', ' '},
                        {' ', '|', '.', '.', '.', ' ', '|', ' '},
                        {' ', '(', ' ', ' ', ' ', ' ', ')', '○'},
                        {' ', '\\', ' ', ' ', ' ', ' ', '/', ' '},
                        {' ', ' ', '¯', '¯', '¯', '¯', ' ', ' '}
                },
                {
                        {'○', ' ', '_', '_', '_', '_', ' ', ' '},
                        {' ', '/', ' ', ' ', ' ', ' ', '\\', ' '},
                        {' ', '(', ' ', ' ', ' ', ' ', ')', ' '},
                        {' ', '|', '.', '.', '.', ' ', '|', ' '},
                        {' ', '|', '.', '.', '.', ' ', '|', '○'},
                        {' ', '(', ' ', ' ', ' ', ' ', ')', ' '},
                        {' ', '\\', ' ', ' ', ' ', ' ', '/', ' '},
                        {' ', ' ', '¯', '¯', '¯', '¯', ' ', ' '}
                },
                {
                        {' ', ' ', '_', '_', '_', '_', ' ', ' '},
                        {' ', '/', ' ', ' ', ' ', ' ', '\\', ' '},
                        {' ', '(', '.', ' ', ' ', ' ', ')', ' '},
                        {' ', '|', '.', '.', '.', ' ', '|', ' '},
                        {' ', '|', '.', '.', '.', ' ', '|', '○'},
                        {' ', '(', ' ', ' ', ' ', ' ', ')', ' '},
                        {'○', '\\', ' ', ' ', ' ', ' ', '/', ' '},
                        {' ', ' ', '¯', '¯', '¯', '¯', ' ', ' '}
                },
        }};
        this.selectedAnimationFrames = this.animationState[this.currentAnimationState];
        this.frameDurationMs = 20;

    }

    @Override
    public boolean use() throws Level.InvalidTemplateMap {
        Streamer streamer = currentLevel.streamer;
        Jungle jungle = new Jungle(streamer.width, streamer.height, streamer);
        streamer.loadLevel(jungle);
        return true;
    }
}
